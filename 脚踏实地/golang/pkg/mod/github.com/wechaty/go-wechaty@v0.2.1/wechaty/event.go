package wechaty

import (
	"github.com/wechaty/go-wechaty/wechaty-puppet/schemas"
	_interface "github.com/wechaty/go-wechaty/wechaty/interface"
	"github.com/wechaty/go-wechaty/wechaty/user"
	"time"
)

type (
	// EventDong ...
	EventDong func(context *Context, data string)
	// EventError ...
	EventError func(context *Context, err error)
	// EventFriendship ...
	EventFriendship func(context *Context, friendship *user.Friendship)
	// EventHeartbeat ...
	EventHeartbeat func(context *Context, data string)
	// EventLogin ...
	EventLogin func(context *Context, user *user.ContactSelf)
	// EventLogout ...
	EventLogout func(context *Context, user *user.ContactSelf, reason string)
	// EventMessage ...
	EventMessage func(context *Context, message *user.Message)
	// EventReady ...
	EventReady func(context *Context)
	// EventRoomInvite ...
	EventRoomInvite func(context *Context, roomInvitation *user.RoomInvitation)
	// EventRoomJoin ...
	EventRoomJoin func(context *Context, room *user.Room, inviteeList []_interface.IContact, inviter _interface.IContact, date time.Time)
	// EventRoomLeave ...
	EventRoomLeave func(context *Context, room *user.Room, leaverList []_interface.IContact, remover _interface.IContact, date time.Time)
	// EventRoomTopic ...
	EventRoomTopic func(context *Context, room *user.Room, newTopic string, oldTopic string, changer _interface.IContact, date time.Time)
	// EventScan ...
	EventScan func(context *Context, qrCode string, status schemas.ScanStatus, data string)
	// EventStart ...
	EventStart func(context *Context)
	// EventStop ...
	EventStop func(context *Context)
)
